# vpc and subnets creation

resource "aws_vpc" "project-vpc" {
  cidr_block       = "10.1.0.0/16"
  instance_tenancy = "default"
  

  tags = {
    Name = "project-vpc"
  }
}

resource "aws_subnet" "public-sub1" {
  vpc_id     = aws_vpc.project-vpc.id
  cidr_block = "10.1.1.0/24"
  map_public_ip_on_launch = true

  tags = {
    Name = "public-sub1"
  }
}
resource "aws_subnet" "public-sub2" {
  vpc_id     = aws_vpc.project-vpc.id
  cidr_block = "10.1.2.0/24"
  map_public_ip_on_launch = true

  tags = {
    Name = "public-sub2"
  }
}

resource "aws_subnet" "private-sub1" {
  vpc_id     = aws_vpc.project-vpc.id
  cidr_block = "10.1.3.0/24"
  map_public_ip_on_launch = false

  tags = {
    Name = "private-sub1"
  }
}

resource "aws_subnet" "private-sub2" {
  vpc_id     = aws_vpc.project-vpc.id
  cidr_block = "10.1.4.0/24"
  map_public_ip_on_launch = false

  tags = {
    Name = "private-sub2"
  }
}


# internet gateway creation

resource "aws_internet_gateway" "igw-1" {
  vpc_id = aws_vpc.project-vpc.id

  tags = {
    Name = "igw-1"
  }
}

# nat gateway creation


resource "aws_eip" "main" {
  vpc      = true
}

resource "aws_nat_gateway" "nat-gateway-1" {
  allocation_id = aws_eip.main.id
  subnet_id     = aws_subnet.public-sub1.id

  tags = {
    Name = "nat-gateway-1"
  }
}


# security groups

resource "aws_security_group" "security-bastion" {
  name        = "security-bastion"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.project-vpc.id

  ingress {
    description      = "TLS from VPC"
    from_port        = 22
    to_port          = 22
    protocol         = "tcp"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }

  tags = {
    Name = "security-bastion"
  }
}


resource "aws_security_group" "private-security" {
  name        = "private-security"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.project-vpc.id

  ingress {
    description      = "TLS from VPC"
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = [aws_vpc.project-vpc.cidr_block]
    
  }

  egress {
    from_port        = 0
    to_port          = 0
    protocol         = "-1"
    cidr_blocks      = ["0.0.0.0/0"]
    
  }

  tags = {
    Name = "private-security"
  }
}
#  public route table 

resource "aws_route_table" "public-rt" {
  vpc_id = aws_vpc.project-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.igw-1.id
  }
  tags = {
    Name = "public-rt"
  }
}

resource "aws_route_table_association" "subnets-associate1" {
  subnet_id      = aws_subnet.public-sub1.id
  route_table_id = aws_route_table.public-rt.id
}
resource "aws_route_table_association" "subnets-association2" {
  subnet_id      = aws_subnet.public-sub2.id
  route_table_id = aws_route_table.public-rt.id
}

# private route table

resource "aws_route_table" "private-rt" {
  vpc_id = aws_vpc.project-vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_nat_gateway.nat-gateway-1.id
  }
  tags = {
    Name = "private-rt"
  }
}

resource "aws_route_table_association" "subnets-associate3" {
  subnet_id      = aws_subnet.private-sub1.id
  route_table_id = aws_route_table.private-rt.id
}
resource "aws_route_table_association" "subnets-association4" {
  subnet_id      = aws_subnet.private-sub2.id
  route_table_id = aws_route_table.private-rt.id
}